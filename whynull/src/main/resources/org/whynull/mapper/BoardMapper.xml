<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.whynull.mapper.BoardMapper">
    <sql id="subject_head">
        <trim prefix=" subject_content =" suffix=" and" prefixOverrides="OR">
            <choose>
                <when test="boardNum == '1'.toString()">
                    <choose>
                        <when test="head == '0'.toString()">'전체'</when>
                        <when test="head == '1'.toString()">'일반'</when>
                        <when test="head == '2'.toString()">'질문'</when>
                        <when test="head == '3'.toString()">'IT'</when>
                    </choose>
                </when>
                <when test="boardNum == '2'.toString()">
                    <choose>
                        <when test="head == '0'.toString()">'전체'</when>
                        <when test="head == '1'.toString()">'소식통'</when>
                        <when test="head == '2'.toString()">'팁'</when>
                        <when test="head == '3'.toString()">'리뷰/후기'</when>
                    </choose>
                </when>
                <when test="boardNum == '3'.toString()">
                    <choose>
                        <when test="head == '0'.toString()">'전체'</when>
                        <when test="head == '1'.toString()">'스터디'</when>
                        <when test="head == '2'.toString()">'프로젝트'</when>
                        <when test="head == '3'.toString()">'기타'</when>
                    </choose>
                </when>
                <when test="boardNum == '4'.toString()">
                    <choose>
                        <when test="head == '0'.toString()">'전체'</when>
                        <when test="head == '1'.toString()">'백엔드'</when>
                        <when test="head == '2'.toString()">'프론트엔드'</when>
                        <when test="head == '3'.toString()">'기타'</when>
                    </choose>
                </when>
            </choose>
        </trim>
    </sql>

    <sql id="boardNum">
        <trim prefix="board_num = " suffix=" and" prefixOverrides="OR">
            <choose>
                <when test="boardNum == '1'.toString()">1</when>
                <when test="boardNum == '2'.toString()">2</when>
                <when test="boardNum == '3'.toString()">3</when>
                <when test="boardNum == '4'.toString()">4</when>
            </choose>
        </trim>
    </sql>

    <sql id="board_choose">
        <choose>
            <when test="boardNum == '1'.toString()">board_free</when>
            <when test="boardNum == '2'.toString()">board_info</when>
            <when test="boardNum == '3'.toString()">board_pr</when>
            <when test="boardNum == '4'.toString()">board_code</when>
        </choose>
    </sql>
    
    <select id="getList" resultType="org.whynull.domain.BoardDTO">
        with board_temp as (
            select row_number() over (order by post_num desc) as rn,
                    post_num, board_num, subject_content, writing_date, mem_id, post_view_count, post_title, post_content, post_good_count, reply_count
                from <include refid="board_choose"></include> use index(primary)
        )

        select post_num, board_num, subject_content, writing_date, mem_id, post_view_count, post_title, post_content, post_good_count, reply_count
            from board_temp
            where

                <include refid="subject_head"></include>
                <include refid="boardNum"></include>

            <![CDATA[
                (rn <= #{pageNum}*#{amount} and rn > (#{pageNum}-1)*#{amount})
            ]]>
    </select>

    <select id="getMainList1" resultType="org.whynull.domain.BoardDTO">
        with board_temp as (
            select row_number() over (order by post_num desc) as rn, post_num, board_num, writing_date, post_title
                from board_free use index(primary)
        )

        select post_num, board_num, writing_date, post_title
            from board_temp
            where

            <![CDATA[
                    (rn <= 5 and rn > 0)
            ]]>
    </select>

    <select id="getMainList2" resultType="org.whynull.domain.BoardDTO">
        with board_temp as (
            select row_number() over (order by post_num desc) as rn, post_num, board_num, writing_date, post_title
                from board_info use index(primary)
        )

        select post_num, board_num, writing_date, post_title
            from board_temp
            where

            <![CDATA[
                    (rn <= 5 and rn > 0)
            ]]>
    </select>

    <select id="getMainList3" resultType="org.whynull.domain.BoardDTO">
        with board_temp as (
            select row_number() over (order by post_num desc) as rn, post_num, board_num, writing_date, post_title
                from board_pr use index(primary)
        )

        select post_num, board_num, writing_date, post_title
            from board_temp
            where

            <![CDATA[
                    (rn <= 5 and rn > 0)
            ]]>
    </select>

    <select id="getMainList4" resultType="org.whynull.domain.BoardDTO">
        with board_temp as (
            select row_number() over (order by post_num desc) as rn, post_num, board_num, writing_date, post_title
                from board_code use index(primary)
        )

        select post_num, board_num, writing_date, post_title
            from board_temp
            where

            <![CDATA[
                    (rn <= 5 and rn > 0)
            ]]>
    </select>

    <insert id="write" parameterType="org.whynull.service.BoardServiceImpl" useGeneratedKeys="true" keyProperty="post_num" keyColumn="post_num">
        insert into <include refid="board_choose"></include> (board_num, subject_content, writing_date, mem_id, post_title, post_content)
            values (#{board_num}, #{subject_content}, now(), #{mem_id}, #{post_title}, #{post_content})
    </insert>

    <select id="read" resultType="org.whynull.domain.BoardDTO">
        select * from <include refid="board_choose"></include> where post_num = #{post_num}
    </select>

    <select id="getTotal" resultType="int">
        select count(*) from <include refid="board_choose"></include> where
        <include refid="subject_head"></include>
        <include refid="boardNum"></include>
        post_num > 0
    </select>

    <update id="viewCount">
        update <include refid="board_choose"></include> set post_view_count = post_view_count + 1 where post_num = #{post_num}
    </update>

    <update id="updateReplyCount">
        update <include refid="board_choose"></include> set reply_count = reply_count + #{amount} where post_num = #{post_num}
    </update>

    <update id="edit">
        update <include refid="board_choose"></include> set post_title=#{post_title}, post_content=#{post_content}, subject_content=#{subject_content}, writing_date=now() where post_num = #{post_num}
    </update>

    <delete id="delete">
        delete from <include refid="board_choose"></include> where post_num = #{post_num}
    </delete>
</mapper>